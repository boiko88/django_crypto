document.addEventListener("DOMContentLoaded", function () {
  const carousel = document.querySelector('.carousel');
  const dots = document.querySelectorAll('.dot');
  const slides = document.querySelectorAll('.carousel-img');
  const delay = 3000;

  const getSlideWidth = () => slides[0].getBoundingClientRect().width;

  // üëâ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–æ—á–∫–∏
  function updateDots(index) {
    dots.forEach((dot, i) => {
      dot.classList.toggle('active', i === index);
    });
  }

  // üëâ –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫–∞—Ä—É—Å–µ–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  function scrollCarousel() {
    const slideWidth = getSlideWidth();
    const nextScrollLeft = carousel.scrollLeft + slideWidth;

    if (nextScrollLeft + carousel.clientWidth >= carousel.scrollWidth) {
      carousel.scrollTo({ left: 0, behavior: 'smooth' });
      updateDots(0);
    } else {
      carousel.scrollBy({ left: slideWidth, behavior: 'smooth' });
      const index = Math.round((carousel.scrollLeft + slideWidth) / slideWidth);
      updateDots(index);
    }
  }

  // üëâ –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  let autoScroll = setInterval(scrollCarousel, delay);

  // üëâ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
  carousel.addEventListener('mouseenter', () => clearInterval(autoScroll));
  carousel.addEventListener('mouseleave', () => {
    autoScroll = setInterval(scrollCarousel, delay);
  });


  // üëâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Ç–æ—á–∫–∞–º
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      const slideWidth = getSlideWidth();
      carousel.scrollTo({
        left: index * slideWidth,
        behavior: 'smooth'
      });
      updateDots(index);
    });
  });

  // üëâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –º—ã—à—å—é/–ø–∞–ª—å—Ü–µ–º ‚Äî –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ—á–µ–∫
  carousel.addEventListener('scroll', () => {
    const slideWidth = getSlideWidth();
    const index = Math.round(carousel.scrollLeft / slideWidth);
    updateDots(index);
  });
});

const carousel = document.querySelector('.carousel');
let scrollAmount = 550;
let delay = 3000;

// Scroll function
function scrollCarousel() {
  carousel.scrollBy({
    left: scrollAmount,
    behavior: 'smooth',
  });

  if (carousel.scrollLeft + carousel.clientWidth >= carousel.scrollWidth - 10) {
    carousel.scrollTo({ left: 0, behavior: 'smooth' });
  }
}

// Auto scroll function
let autoScroll = setInterval(scrollCarousel, delay);

// Stop wile hovering
carousel.addEventListener('mouseenter', () => {
  clearInterval(autoScroll); // ‚õî Stop timer
});

// Continues while no hovering
carousel.addEventListener('mouseleave', () => {
  autoScroll = setInterval(scrollCarousel, delay); // ‚ñ∂Ô∏è start again
});


let currentIndex = 0;

function currentSlide(n) {
  const slides = document.querySelectorAll('.carousel-img');
  const dots = document.querySelectorAll('.dot');

  slides.forEach(slide => slide.classList.remove('active'));
  dots.forEach(dot => dot.classList.remove('active'));

  slides[n-1].classList.add('active');
  dots[n-1].classList.add('active');

  // –ß—Ç–æ–±—ã —Å–ª–∞–π–¥—ã –¥–≤–∏–≥–∞–ª–∏—Å—å: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ transform
  document.querySelector('.slides').style.transform = `translateX(-${(n-1) * 100}%)`;
}
